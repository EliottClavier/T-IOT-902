name: "[IoT] Build, test and generate documentation"

on:
  push:
    branches:
      - main
      - develop
      - feat/ci
      - feat/test_coverage
  pull_request:
    branches:
      - main
      - develop

env:
  PYTHON_VERSION: "3.11.7"
  IOT_DIRECTORY: iot
  PIO_BUILD_DIR: .pio/build
  PIO_TEST_ENV: native

jobs:
  test:
    name: "Test the project"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout project"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Install PlatformIO"
        run: pip install platformio

      - name: "Test the project"
        run: platformio test -e ${{ env.PIO_TEST_ENV }} -d ${{ env.IOT_DIRECTORY }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          flag: IOT
          name: IOT
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    name: "Build all packages and upload the artifacts"
    needs:
      - test
    strategy:
      matrix:
        packages: [
          { name: "emitter", api_name: "emitter" },
          { name: "Receptor", api_name: "receptor" }
        ]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout project"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Install PlatformIO"
        run: pip install platformio

      - name: "Build the ${{ matrix.packages.name }} project"
        run: platformio run -e ${{ matrix.packages.api_name }} -d ${{ env.IOT_DIRECTORY }}

      - name: "Upload the build artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.packages.name }}-build
          path: ${{ env.IOT_DIRECTORY }}/${{ env.PIO_BUILD_DIR }}/${{ matrix.packages.api_name }}
  analyst:
    name: "Run the static code analysis"
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: "Checkout project"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: "Install PlatformIO"
        run: pip install platformio

      - name: "Run the static code analysis"
        run: platformio check > analysis.txt
        working-directory: ${{ env.IOT_DIRECTORY }}
      - name: "Display the analysis"
        run: cat analysis.txt
        working-directory: ${{ env.IOT_DIRECTORY }}
      - name: "Upload the analysis artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: analysis
          path: ${{ env.IOT_DIRECTORY }}/analysis.txt
  documentation:
    needs:
      - build
      - test
    name: "Generate the documentation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Install Doxygen"
        run: |
          sudo apt update --yes && sudo apt upgrade --yes
          sudo apt install doxygen
      - name: "Generate Doc"
        run: doxygen ${{ env.IOT_DIRECTORY }}/Doxyfile
      - name: "Upload the documentation artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: ${{ env.IOT_DIRECTORY }}/docs/doxygen/html